# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/subprocess/all/subprocess.rbi
#
# subprocess-1.3.2
module Subprocess
  def self.call(cmd, opts = nil, &blk); end
  def self.check_call(cmd, opts = nil, &blk); end
  def self.check_output(cmd, opts = nil, &blk); end
  def self.popen(cmd, opts = nil, &blk); end
  def self.status_to_s(status, convert_high_exit = nil); end
end
class Subprocess::NonZeroExit < StandardError
  def command; end
  def initialize(cmd, status); end
  def status; end
end
class Subprocess::Process
  def command; end
  def communicate(input = nil); end
  def drain_fd(fd, buf = nil); end
  def initialize(cmd, opts = nil, &blk); end
  def our_fd?(fd); end
  def parse_fd(fd, mode); end
  def pid; end
  def poll; end
  def self.catching_sigchld(pid, fd); end
  def self.handle_sigchld; end
  def self.register_pid(pid, fd); end
  def self.unregister_pid(pid); end
  def send_signal(signal); end
  def status; end
  def stderr; end
  def stdin; end
  def stdout; end
  def terminate; end
  def wait; end
end
